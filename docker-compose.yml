version: '3.9'
services:
  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: mediap
      POSTGRES_USER: mediap
      POSTGRES_PASSWORD: mediap
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mediap"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  web:
    build: .
    restart: unless-stopped
    environment:
      - DEBUG=True
      - USE_SQLITE=False
      - DB_HOST=db
      - REDIS_URL=redis://redis:6379/0
      - DB_NAME=mediap
      - DB_USER=mediap
      - DB_PASSWORD=mediap
      - GUNICORN_WORKERS=3
      - GUNICORN_TIMEOUT=60
      - COLLECT_STATIC=1
    volumes:
      - .:/app
      - ./logs:/app/logs
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "bash", "docker/healthcheck.sh"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s

  celery:
    build: .
    restart: unless-stopped
    environment:
      - DEBUG=True
      - USE_SQLITE=False
      - DB_HOST=db
      - REDIS_URL=redis://redis:6379/0
      - DB_NAME=mediap
      - DB_USER=mediap
      - DB_PASSWORD=mediap
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A mediap worker -l info

  celery-beat:
    build: .
    restart: unless-stopped
    environment:
      - DEBUG=True
      - USE_SQLITE=False
      - DB_HOST=db
      - REDIS_URL=redis://redis:6379/0
      - DB_NAME=mediap
      - DB_USER=mediap
      - DB_PASSWORD=mediap
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A mediap beat -l info

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume: