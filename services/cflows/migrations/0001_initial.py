# Generated by Django 5.2.6 on 2025-09-10 20:32

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Workflow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("version", models.PositiveIntegerField(default=1)),
                (
                    "is_shared",
                    models.BooleanField(
                        default=False, help_text="Share with other organizations"
                    ),
                ),
                (
                    "auto_assign",
                    models.BooleanField(
                        default=False,
                        help_text="Auto-assign work items to team members",
                    ),
                ),
                (
                    "requires_approval",
                    models.BooleanField(
                        default=False, help_text="Workflow changes require approval"
                    ),
                ),
                (
                    "field_config",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Configuration for which standard fields to show/hide/replace",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "allowed_edit_teams",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Teams that can edit this workflow and create work items",
                        related_name="editable_workflows",
                        to="core.team",
                    ),
                ),
                (
                    "allowed_organizations",
                    models.ManyToManyField(
                        blank=True,
                        related_name="shared_workflows",
                        to="core.organization",
                    ),
                ),
                (
                    "allowed_view_teams",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Teams that can view this workflow and its work items",
                        related_name="viewable_workflows",
                        to="core.team",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_workflows",
                        to="core.userprofile",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workflows",
                        to="core.organization",
                    ),
                ),
                (
                    "owner_team",
                    models.ForeignKey(
                        help_text="The team that owns and manages this workflow",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="owned_workflows",
                        to="core.team",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="WorkflowStep",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "order",
                    models.PositiveIntegerField(
                        help_text="Order of this step in the workflow"
                    ),
                ),
                (
                    "requires_booking",
                    models.BooleanField(
                        default=False,
                        help_text="Does this step require capacity booking?",
                    ),
                ),
                (
                    "estimated_duration_hours",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Estimated time for this step",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "is_terminal",
                    models.BooleanField(
                        default=False, help_text="Is this a completion/end step?"
                    ),
                ),
                (
                    "data_schema",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="JSON schema for custom data at this step",
                    ),
                ),
                (
                    "assigned_team",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_steps",
                        to="core.team",
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="steps",
                        to="cflows.workflow",
                    ),
                ),
            ],
            options={
                "ordering": ["workflow", "order"],
                "unique_together": {("workflow", "name")},
            },
        ),
        migrations.CreateModel(
            name="CustomField",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Internal field name (no spaces)", max_length=100
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        help_text="Display label for users", max_length=200
                    ),
                ),
                (
                    "field_type",
                    models.CharField(
                        choices=[
                            ("text", "Text Input"),
                            ("textarea", "Text Area"),
                            ("number", "Number"),
                            ("decimal", "Decimal"),
                            ("date", "Date"),
                            ("datetime", "Date & Time"),
                            ("checkbox", "Checkbox"),
                            ("select", "Dropdown Select"),
                            ("multiselect", "Multiple Select"),
                            ("email", "Email"),
                            ("url", "URL"),
                            ("phone", "Phone Number"),
                        ],
                        default="text",
                        max_length=20,
                    ),
                ),
                ("is_required", models.BooleanField(default=False)),
                (
                    "default_value",
                    models.TextField(
                        blank=True, help_text="Default value (JSON for complex types)"
                    ),
                ),
                (
                    "help_text",
                    models.CharField(
                        blank=True, help_text="Help text shown to users", max_length=500
                    ),
                ),
                (
                    "placeholder",
                    models.CharField(
                        blank=True,
                        help_text="Placeholder text for input fields",
                        max_length=200,
                    ),
                ),
                (
                    "min_length",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Minimum length for text fields",
                        null=True,
                    ),
                ),
                (
                    "max_length",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maximum length for text fields",
                        null=True,
                    ),
                ),
                (
                    "min_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Minimum value for number fields",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "max_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Maximum value for number fields",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "options",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Options for select fields (JSON array)",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(default=0, help_text="Display order"),
                ),
                (
                    "section",
                    models.CharField(
                        blank=True, help_text="Section to group fields", max_length=100
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="custom_fields",
                        to="core.organization",
                    ),
                ),
                (
                    "workflows",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Limit to specific workflows (empty = all workflows)",
                        to="cflows.workflow",
                    ),
                ),
                (
                    "workflow_steps",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Show only for specific steps",
                        to="cflows.workflowstep",
                    ),
                ),
            ],
            options={
                "ordering": ["section", "order", "label"],
                "unique_together": {("organization", "name")},
            },
        ),
        migrations.CreateModel(
            name="WorkflowTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("category", models.CharField(default="General", max_length=100)),
                (
                    "is_public",
                    models.BooleanField(
                        default=False, help_text="Available to all organizations"
                    ),
                ),
                (
                    "template_data",
                    models.JSONField(
                        default=dict,
                        help_text="Template configuration for steps and transitions",
                    ),
                ),
                ("usage_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by_org",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workflow_templates",
                        to="core.organization",
                    ),
                ),
            ],
            options={
                "ordering": ["category", "name"],
            },
        ),
        migrations.AddField(
            model_name="workflow",
            name="template",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="workflows",
                to="cflows.workflowtemplate",
            ),
        ),
        migrations.CreateModel(
            name="WorkItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Human-readable identifier for this item",
                        max_length=200,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "rich_content",
                    models.TextField(
                        blank=True,
                        help_text="Rich HTML content for detailed descriptions",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("normal", "Normal"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="normal",
                        max_length=10,
                    ),
                ),
                (
                    "tags",
                    models.JSONField(
                        default=list, help_text="List of tags for categorization"
                    ),
                ),
                ("due_date", models.DateTimeField(blank=True, null=True)),
                (
                    "estimated_duration",
                    models.DurationField(
                        blank=True, help_text="Estimated time to complete", null=True
                    ),
                ),
                (
                    "data",
                    models.JSONField(
                        default=dict, help_text="Custom data specific to this work item"
                    ),
                ),
                ("is_completed", models.BooleanField(default=False)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_work_items",
                        to="core.userprofile",
                    ),
                ),
                (
                    "current_assignee",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_work_items",
                        to="core.userprofile",
                    ),
                ),
                (
                    "current_step",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="current_work_items",
                        to="cflows.workflowstep",
                    ),
                ),
                (
                    "depends_on",
                    models.ManyToManyField(
                        blank=True, related_name="dependents", to="cflows.workitem"
                    ),
                ),
                (
                    "watchers",
                    models.ManyToManyField(
                        blank=True,
                        related_name="watched_work_items",
                        to="core.userprofile",
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="work_items",
                        to="cflows.workflow",
                    ),
                ),
            ],
            options={
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="TeamBooking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
                (
                    "required_members",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("is_completed", models.BooleanField(default=False)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assigned_members",
                    models.ManyToManyField(
                        blank=True,
                        related_name="assigned_cflows_bookings",
                        to="core.userprofile",
                    ),
                ),
                (
                    "booked_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_cflows_bookings",
                        to="core.userprofile",
                    ),
                ),
                (
                    "completed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="completed_cflows_bookings",
                        to="core.userprofile",
                    ),
                ),
                (
                    "job_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.jobtype",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cflows_bookings",
                        to="core.team",
                    ),
                ),
                (
                    "workflow_step",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bookings",
                        to="cflows.workflowstep",
                    ),
                ),
                (
                    "work_item",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bookings",
                        to="cflows.workitem",
                    ),
                ),
            ],
            options={
                "ordering": ["start_time"],
            },
        ),
        migrations.CreateModel(
            name="WorkItemAttachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file", models.FileField(upload_to="cflows/attachments/%Y/%m/%d/")),
                ("filename", models.CharField(max_length=255)),
                ("file_size", models.PositiveIntegerField()),
                ("content_type", models.CharField(max_length=100)),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("description", models.TextField(blank=True)),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.userprofile",
                    ),
                ),
                (
                    "work_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="cflows.workitem",
                    ),
                ),
            ],
            options={
                "ordering": ["-uploaded_at"],
            },
        ),
        migrations.CreateModel(
            name="WorkItemComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                (
                    "is_system_comment",
                    models.BooleanField(
                        default=False, help_text="Auto-generated system comment"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_edited", models.BooleanField(default=False)),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.userprofile",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="cflows.workitemcomment",
                    ),
                ),
                (
                    "work_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="cflows.workitem",
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="WorkItemHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("data_snapshot", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "changed_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.userprofile",
                    ),
                ),
                (
                    "from_step",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="history_from",
                        to="cflows.workflowstep",
                    ),
                ),
                (
                    "to_step",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="history_to",
                        to="cflows.workflowstep",
                    ),
                ),
                (
                    "work_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="history",
                        to="cflows.workitem",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CalendarView",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("is_default", models.BooleanField(default=False)),
                ("teams", models.JSONField(blank=True, default=list)),
                ("job_types", models.JSONField(blank=True, default=list)),
                ("workflows", models.JSONField(blank=True, default=list)),
                ("status", models.CharField(blank=True, max_length=20)),
                ("event_type", models.CharField(blank=True, max_length=20)),
                ("booked_by", models.CharField(blank=True, max_length=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="saved_calendar_views",
                        to="core.userprofile",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "unique_together": {("user", "name")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="workflow",
            unique_together={("organization", "name")},
        ),
        migrations.CreateModel(
            name="WorkflowTransition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        blank=True,
                        help_text="Optional label for this transition (e.g., 'Approve', 'Reject')",
                        max_length=100,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Detailed description of what this transition does",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        choices=[
                            ("blue", "Blue (Default)"),
                            ("green", "Green (Success)"),
                            ("red", "Red (Danger/Reject)"),
                            ("yellow", "Yellow (Warning)"),
                            ("purple", "Purple (Review)"),
                            ("indigo", "Indigo (Process)"),
                            ("gray", "Gray (Neutral)"),
                            ("orange", "Orange (Alert)"),
                        ],
                        default="blue",
                        help_text="Button color for this transition",
                        max_length=20,
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("", "No Icon"),
                            ("fas fa-check", "Checkmark (Approve)"),
                            ("fas fa-times", "X Mark (Reject)"),
                            ("fas fa-arrow-right", "Arrow Right (Next)"),
                            ("fas fa-undo", "Undo (Return)"),
                            ("fas fa-eye", "Eye (Review)"),
                            ("fas fa-edit", "Edit (Modify)"),
                            ("fas fa-pause", "Pause (Hold)"),
                            ("fas fa-play", "Play (Start)"),
                            ("fas fa-stop", "Stop (End)"),
                            ("fas fa-upload", "Upload (Submit)"),
                            ("fas fa-download", "Download (Retrieve)"),
                            ("fas fa-cog", "Cog (Process)"),
                            ("fas fa-user", "User (Assign)"),
                            ("fas fa-users", "Users (Team)"),
                            ("fas fa-flag", "Flag (Priority)"),
                            ("fas fa-clock", "Clock (Schedule)"),
                            ("fas fa-star", "Star (Favorite)"),
                            ("fas fa-thumbs-up", "Thumbs Up"),
                            ("fas fa-thumbs-down", "Thumbs Down"),
                        ],
                        help_text="Icon to display on the transition button",
                        max_length=50,
                    ),
                ),
                (
                    "requires_confirmation",
                    models.BooleanField(
                        default=False,
                        help_text="Require user confirmation before executing this transition",
                    ),
                ),
                (
                    "confirmation_message",
                    models.CharField(
                        blank=True,
                        help_text="Custom confirmation message (if requires_confirmation is True)",
                        max_length=200,
                    ),
                ),
                (
                    "auto_assign_to_step_team",
                    models.BooleanField(
                        default=False,
                        help_text="Automatically assign work item to the destination step's assigned team",
                    ),
                ),
                (
                    "requires_comment",
                    models.BooleanField(
                        default=False,
                        help_text="Require a comment when using this transition",
                    ),
                ),
                (
                    "comment_prompt",
                    models.CharField(
                        blank=True,
                        help_text="Custom prompt for required comment",
                        max_length=200,
                    ),
                ),
                (
                    "condition",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Optional conditions for this transition",
                    ),
                ),
                (
                    "permission_level",
                    models.CharField(
                        choices=[
                            ("any", "Any User"),
                            ("assignee", "Current Assignee Only"),
                            ("team", "Team Members Only"),
                            ("admin", "Admin/Staff Only"),
                            ("creator", "Creator Only"),
                            ("custom", "Custom Conditions"),
                        ],
                        default="any",
                        help_text="Who can use this transition",
                        max_length=20,
                    ),
                ),
                (
                    "order",
                    models.IntegerField(
                        default=0, help_text="Display order for transition buttons"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this transition is available for use",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "from_step",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="outgoing_transitions",
                        to="cflows.workflowstep",
                    ),
                ),
                (
                    "to_step",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="incoming_transitions",
                        to="cflows.workflowstep",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "label"],
                "unique_together": {("from_step", "to_step")},
            },
        ),
        migrations.CreateModel(
            name="StepDataCollection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_completed", models.BooleanField(default=False)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "completed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.userprofile",
                    ),
                ),
                (
                    "initiated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="initiated_data_collections",
                        to="core.userprofile",
                    ),
                ),
                (
                    "workflow_step",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cflows.workflowstep",
                    ),
                ),
                (
                    "work_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="step_data_collections",
                        to="cflows.workitem",
                    ),
                ),
            ],
            options={
                "unique_together": {("work_item", "workflow_step")},
            },
        ),
        migrations.CreateModel(
            name="WorkItemCustomFieldValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "collected_by",
                    models.ForeignKey(
                        help_text="User who provided this data",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.userprofile",
                    ),
                ),
                (
                    "custom_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cflows.customfield",
                    ),
                ),
                (
                    "work_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="custom_field_values",
                        to="cflows.workitem",
                    ),
                ),
                (
                    "workflow_step",
                    models.ForeignKey(
                        blank=True,
                        help_text="Step where this data was collected",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cflows.workflowstep",
                    ),
                ),
            ],
            options={
                "unique_together": {("work_item", "custom_field")},
            },
        ),
        migrations.CreateModel(
            name="WorkItemRevision",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("revision_number", models.PositiveIntegerField()),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("rich_content", models.TextField(blank=True)),
                ("data", models.JSONField(default=dict)),
                ("change_summary", models.CharField(blank=True, max_length=500)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "changed_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.userprofile",
                    ),
                ),
                (
                    "work_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="revisions",
                        to="cflows.workitem",
                    ),
                ),
            ],
            options={
                "ordering": ["-revision_number"],
                "unique_together": {("work_item", "revision_number")},
            },
        ),
    ]
