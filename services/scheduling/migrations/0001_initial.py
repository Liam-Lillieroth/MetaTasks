# Generated by Django 5.2.6 on 2025-09-10 20:32

import datetime
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="SchedulableResource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "resource_type",
                    models.CharField(
                        choices=[
                            ("team", "Team"),
                            ("equipment", "Equipment"),
                            ("room", "Room"),
                            ("person", "Person"),
                            ("custom", "Custom"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("max_concurrent_bookings", models.PositiveIntegerField(default=1)),
                (
                    "default_booking_duration",
                    models.DurationField(default=datetime.timedelta(seconds=7200)),
                ),
                (
                    "availability_rules",
                    models.JSONField(
                        default=dict, help_text="Working hours, blackout dates, etc."
                    ),
                ),
                (
                    "external_resource_id",
                    models.CharField(
                        blank=True, help_text="ID in external system", max_length=100
                    ),
                ),
                (
                    "service_type",
                    models.CharField(
                        default="scheduling",
                        help_text="Which service manages this resource",
                        max_length=50,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "linked_team",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.team",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.organization",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ResourceScheduleRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rule_type",
                    models.CharField(
                        choices=[
                            ("availability", "Availability Window"),
                            ("blackout", "Blackout Period"),
                            ("capacity_override", "Capacity Override"),
                            ("auto_approval", "Auto Approval"),
                            ("require_approval", "Require Approval"),
                        ],
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("start_time", models.TimeField(blank=True, null=True)),
                ("end_time", models.TimeField(blank=True, null=True)),
                (
                    "days_of_week",
                    models.JSONField(
                        default=list, help_text="List of weekday numbers (0=Monday)"
                    ),
                ),
                (
                    "rule_config",
                    models.JSONField(
                        default=dict, help_text="Rule-specific configuration"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "resource",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedule_rules",
                        to="scheduling.schedulableresource",
                    ),
                ),
            ],
            options={
                "ordering": ["resource", "rule_type"],
            },
        ),
        migrations.CreateModel(
            name="BookingRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("requested_start", models.DateTimeField()),
                ("requested_end", models.DateTimeField()),
                ("actual_start", models.DateTimeField(blank=True, null=True)),
                ("actual_end", models.DateTimeField(blank=True, null=True)),
                ("required_capacity", models.PositiveIntegerField(default=1)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("rescheduled", "Rescheduled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("normal", "Normal"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="normal",
                        max_length=20,
                    ),
                ),
                (
                    "source_service",
                    models.CharField(
                        help_text="Service that created this booking", max_length=50
                    ),
                ),
                (
                    "source_object_type",
                    models.CharField(
                        help_text="Type of object in source service", max_length=50
                    ),
                ),
                (
                    "source_object_id",
                    models.CharField(
                        help_text="ID of object in source service", max_length=100
                    ),
                ),
                ("custom_data", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "assigned_to",
                    models.ManyToManyField(
                        blank=True,
                        related_name="assigned_bookings",
                        to="core.userprofile",
                    ),
                ),
                (
                    "completed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="completed_bookings",
                        to="core.userprofile",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.organization",
                    ),
                ),
                (
                    "requested_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="requested_bookings",
                        to="core.userprofile",
                    ),
                ),
                (
                    "resource",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="scheduling.schedulableresource",
                    ),
                ),
            ],
            options={
                "ordering": ["requested_start"],
            },
        ),
        migrations.AddIndex(
            model_name="schedulableresource",
            index=models.Index(
                fields=["organization", "resource_type", "is_active"],
                name="scheduling__organiz_2df143_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="schedulableresource",
            unique_together={("organization", "name")},
        ),
        migrations.AddIndex(
            model_name="bookingrequest",
            index=models.Index(
                fields=["organization", "status", "requested_start"],
                name="scheduling__organiz_bae956_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="bookingrequest",
            index=models.Index(
                fields=["resource", "requested_start"],
                name="scheduling__resourc_a87390_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="bookingrequest",
            index=models.Index(
                fields=["source_service", "source_object_id"],
                name="scheduling__source__d81d0c_idx",
            ),
        ),
    ]
